#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace clinic_system
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="clinic")]
	public partial class clinicDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertcheck_up(check_up instance);
    partial void Updatecheck_up(check_up instance);
    partial void Deletecheck_up(check_up instance);
    partial void Insertcheck_up_lx(check_up_lx instance);
    partial void Updatecheck_up_lx(check_up_lx instance);
    partial void Deletecheck_up_lx(check_up_lx instance);
    partial void Insertcheck_up_treatment(check_up_treatment instance);
    partial void Updatecheck_up_treatment(check_up_treatment instance);
    partial void Deletecheck_up_treatment(check_up_treatment instance);
    partial void Insertdoctor(doctor instance);
    partial void Updatedoctor(doctor instance);
    partial void Deletedoctor(doctor instance);
    partial void Insertlogin(login instance);
    partial void Updatelogin(login instance);
    partial void Deletelogin(login instance);
    partial void Insertorganization(organization instance);
    partial void Updateorganization(organization instance);
    partial void Deleteorganization(organization instance);
    partial void Insertpatient(patient instance);
    partial void Updatepatient(patient instance);
    partial void Deletepatient(patient instance);
    partial void Insertrays_lab(rays_lab instance);
    partial void Updaterays_lab(rays_lab instance);
    partial void Deleterays_lab(rays_lab instance);
    partial void Insertsecretary(secretary instance);
    partial void Updatesecretary(secretary instance);
    partial void Deletesecretary(secretary instance);
    partial void Inserttreatment(treatment instance);
    partial void Updatetreatment(treatment instance);
    partial void Deletetreatment(treatment instance);
    #endregion
		
		public clinicDataContext() : 
				base(global::clinic_system.Properties.Settings.Default.clinicConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public clinicDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public clinicDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public clinicDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public clinicDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<check_up> check_ups
		{
			get
			{
				return this.GetTable<check_up>();
			}
		}
		
		public System.Data.Linq.Table<check_up_lx> check_up_lxes
		{
			get
			{
				return this.GetTable<check_up_lx>();
			}
		}
		
		public System.Data.Linq.Table<check_up_treatment> check_up_treatments
		{
			get
			{
				return this.GetTable<check_up_treatment>();
			}
		}
		
		public System.Data.Linq.Table<doctor> doctors
		{
			get
			{
				return this.GetTable<doctor>();
			}
		}
		
		public System.Data.Linq.Table<login> logins
		{
			get
			{
				return this.GetTable<login>();
			}
		}
		
		public System.Data.Linq.Table<organization> organizations
		{
			get
			{
				return this.GetTable<organization>();
			}
		}
		
		public System.Data.Linq.Table<patient> patients
		{
			get
			{
				return this.GetTable<patient>();
			}
		}
		
		public System.Data.Linq.Table<rays_lab> rays_labs
		{
			get
			{
				return this.GetTable<rays_lab>();
			}
		}
		
		public System.Data.Linq.Table<secretary> secretaries
		{
			get
			{
				return this.GetTable<secretary>();
			}
		}
		
		public System.Data.Linq.Table<treatment> treatments
		{
			get
			{
				return this.GetTable<treatment>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.check_up")]
	public partial class check_up : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Cid;
		
		private string _tybe;
		
		private string _start_from;
		
		private string _end_to;
		
		private string _nots;
		
		private int _Did;
		
		private int _Pid;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _case_mul;
		
		private System.Nullable<decimal> _cost;
		
		private bool _done;
		
		private System.Nullable<int> _age;
		
		private System.Nullable<decimal> _weight;
		
		private EntitySet<check_up_treatment> _check_up_treatments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCidChanging(int value);
    partial void OnCidChanged();
    partial void OntybeChanging(string value);
    partial void OntybeChanged();
    partial void Onstart_fromChanging(string value);
    partial void Onstart_fromChanged();
    partial void Onend_toChanging(string value);
    partial void Onend_toChanged();
    partial void OnnotsChanging(string value);
    partial void OnnotsChanged();
    partial void OnDidChanging(int value);
    partial void OnDidChanged();
    partial void OnPidChanging(int value);
    partial void OnPidChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void Oncase_mulChanging(string value);
    partial void Oncase_mulChanged();
    partial void OncostChanging(System.Nullable<decimal> value);
    partial void OncostChanged();
    partial void OndoneChanging(bool value);
    partial void OndoneChanged();
    partial void OnageChanging(System.Nullable<int> value);
    partial void OnageChanged();
    partial void OnweightChanging(System.Nullable<decimal> value);
    partial void OnweightChanged();
    #endregion
		
		public check_up()
		{
			this._check_up_treatments = new EntitySet<check_up_treatment>(new Action<check_up_treatment>(this.attach_check_up_treatments), new Action<check_up_treatment>(this.detach_check_up_treatments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Cid
		{
			get
			{
				return this._Cid;
			}
			set
			{
				if ((this._Cid != value))
				{
					this.OnCidChanging(value);
					this.SendPropertyChanging();
					this._Cid = value;
					this.SendPropertyChanged("Cid");
					this.OnCidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tybe", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tybe
		{
			get
			{
				return this._tybe;
			}
			set
			{
				if ((this._tybe != value))
				{
					this.OntybeChanging(value);
					this.SendPropertyChanging();
					this._tybe = value;
					this.SendPropertyChanged("tybe");
					this.OntybeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_from", DbType="NVarChar(50)")]
		public string start_from
		{
			get
			{
				return this._start_from;
			}
			set
			{
				if ((this._start_from != value))
				{
					this.Onstart_fromChanging(value);
					this.SendPropertyChanging();
					this._start_from = value;
					this.SendPropertyChanged("start_from");
					this.Onstart_fromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_to", DbType="NVarChar(50)")]
		public string end_to
		{
			get
			{
				return this._end_to;
			}
			set
			{
				if ((this._end_to != value))
				{
					this.Onend_toChanging(value);
					this.SendPropertyChanging();
					this._end_to = value;
					this.SendPropertyChanged("end_to");
					this.Onend_toChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nots", DbType="NVarChar(MAX)")]
		public string nots
		{
			get
			{
				return this._nots;
			}
			set
			{
				if ((this._nots != value))
				{
					this.OnnotsChanging(value);
					this.SendPropertyChanging();
					this._nots = value;
					this.SendPropertyChanged("nots");
					this.OnnotsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Did", DbType="Int NOT NULL")]
		public int Did
		{
			get
			{
				return this._Did;
			}
			set
			{
				if ((this._Did != value))
				{
					this.OnDidChanging(value);
					this.SendPropertyChanging();
					this._Did = value;
					this.SendPropertyChanged("Did");
					this.OnDidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pid", DbType="Int NOT NULL")]
		public int Pid
		{
			get
			{
				return this._Pid;
			}
			set
			{
				if ((this._Pid != value))
				{
					this.OnPidChanging(value);
					this.SendPropertyChanging();
					this._Pid = value;
					this.SendPropertyChanged("Pid");
					this.OnPidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_case_mul", DbType="NVarChar(500)")]
		public string case_mul
		{
			get
			{
				return this._case_mul;
			}
			set
			{
				if ((this._case_mul != value))
				{
					this.Oncase_mulChanging(value);
					this.SendPropertyChanging();
					this._case_mul = value;
					this.SendPropertyChanged("case_mul");
					this.Oncase_mulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_done", DbType="Bit NOT NULL")]
		public bool done
		{
			get
			{
				return this._done;
			}
			set
			{
				if ((this._done != value))
				{
					this.OndoneChanging(value);
					this.SendPropertyChanging();
					this._done = value;
					this.SendPropertyChanged("done");
					this.OndoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", DbType="Int")]
		public System.Nullable<int> age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="check_up_check_up_treatment", Storage="_check_up_treatments", ThisKey="Cid", OtherKey="Cid")]
		public EntitySet<check_up_treatment> check_up_treatments
		{
			get
			{
				return this._check_up_treatments;
			}
			set
			{
				this._check_up_treatments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_check_up_treatments(check_up_treatment entity)
		{
			this.SendPropertyChanging();
			entity.check_up = this;
		}
		
		private void detach_check_up_treatments(check_up_treatment entity)
		{
			this.SendPropertyChanging();
			entity.check_up = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[check-up_lx]")]
	public partial class check_up_lx : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Cid;
		
		private int _Oid;
		
		private int _OOid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCidChanging(int value);
    partial void OnCidChanged();
    partial void OnOidChanging(int value);
    partial void OnOidChanged();
    partial void OnOOidChanging(int value);
    partial void OnOOidChanged();
    #endregion
		
		public check_up_lx()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Cid
		{
			get
			{
				return this._Cid;
			}
			set
			{
				if ((this._Cid != value))
				{
					this.OnCidChanging(value);
					this.SendPropertyChanging();
					this._Cid = value;
					this.SendPropertyChanged("Cid");
					this.OnCidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OOid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OOid
		{
			get
			{
				return this._OOid;
			}
			set
			{
				if ((this._OOid != value))
				{
					this.OnOOidChanging(value);
					this.SendPropertyChanging();
					this._OOid = value;
					this.SendPropertyChanged("OOid");
					this.OnOOidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[check-up_treatment]")]
	public partial class check_up_treatment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Cid;
		
		private int _TTid;
		
		private string _dose;
		
		private string _duration;
		
		private EntityRef<check_up> _check_up;
		
		private EntityRef<treatment> _treatment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCidChanging(int value);
    partial void OnCidChanged();
    partial void OnTTidChanging(int value);
    partial void OnTTidChanged();
    partial void OndoseChanging(string value);
    partial void OndoseChanged();
    partial void OndurationChanging(string value);
    partial void OndurationChanged();
    #endregion
		
		public check_up_treatment()
		{
			this._check_up = default(EntityRef<check_up>);
			this._treatment = default(EntityRef<treatment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Cid
		{
			get
			{
				return this._Cid;
			}
			set
			{
				if ((this._Cid != value))
				{
					if (this._check_up.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCidChanging(value);
					this.SendPropertyChanging();
					this._Cid = value;
					this.SendPropertyChanged("Cid");
					this.OnCidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TTid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TTid
		{
			get
			{
				return this._TTid;
			}
			set
			{
				if ((this._TTid != value))
				{
					if (this._treatment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTTidChanging(value);
					this.SendPropertyChanging();
					this._TTid = value;
					this.SendPropertyChanged("TTid");
					this.OnTTidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dose", DbType="NVarChar(50)")]
		public string dose
		{
			get
			{
				return this._dose;
			}
			set
			{
				if ((this._dose != value))
				{
					this.OndoseChanging(value);
					this.SendPropertyChanging();
					this._dose = value;
					this.SendPropertyChanged("dose");
					this.OndoseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duration", DbType="NVarChar(50)")]
		public string duration
		{
			get
			{
				return this._duration;
			}
			set
			{
				if ((this._duration != value))
				{
					this.OndurationChanging(value);
					this.SendPropertyChanging();
					this._duration = value;
					this.SendPropertyChanged("duration");
					this.OndurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="check_up_check_up_treatment", Storage="_check_up", ThisKey="Cid", OtherKey="Cid", IsForeignKey=true)]
		public check_up check_up
		{
			get
			{
				return this._check_up.Entity;
			}
			set
			{
				check_up previousValue = this._check_up.Entity;
				if (((previousValue != value) 
							|| (this._check_up.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._check_up.Entity = null;
						previousValue.check_up_treatments.Remove(this);
					}
					this._check_up.Entity = value;
					if ((value != null))
					{
						value.check_up_treatments.Add(this);
						this._Cid = value.Cid;
					}
					else
					{
						this._Cid = default(int);
					}
					this.SendPropertyChanged("check_up");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="treatment_check_up_treatment", Storage="_treatment", ThisKey="TTid", OtherKey="TTid", IsForeignKey=true)]
		public treatment treatment
		{
			get
			{
				return this._treatment.Entity;
			}
			set
			{
				treatment previousValue = this._treatment.Entity;
				if (((previousValue != value) 
							|| (this._treatment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._treatment.Entity = null;
						previousValue.check_up_treatments.Remove(this);
					}
					this._treatment.Entity = value;
					if ((value != null))
					{
						value.check_up_treatments.Add(this);
						this._TTid = value.TTid;
					}
					else
					{
						this._TTid = default(int);
					}
					this.SendPropertyChanged("treatment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.doctor")]
	public partial class doctor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Did;
		
		private string _Dname;
		
		private string _Dphone_number;
		
		private string _Dspecialization;
		
		private decimal _Dnew_book_cost;
		
		private decimal _Dquick_book_cost;
		
		private decimal _Drebook_cost;
		
		private string _Dwork_from;
		
		private string _Dwork_to;
		
		private System.DateTime _Ddate_of_start_work;
		
		private int _logId;
		
		private string _daysOfWork;
		
		private EntityRef<login> _login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDidChanging(int value);
    partial void OnDidChanged();
    partial void OnDnameChanging(string value);
    partial void OnDnameChanged();
    partial void OnDphone_numberChanging(string value);
    partial void OnDphone_numberChanged();
    partial void OnDspecializationChanging(string value);
    partial void OnDspecializationChanged();
    partial void OnDnew_book_costChanging(decimal value);
    partial void OnDnew_book_costChanged();
    partial void OnDquick_book_costChanging(decimal value);
    partial void OnDquick_book_costChanged();
    partial void OnDrebook_costChanging(decimal value);
    partial void OnDrebook_costChanged();
    partial void OnDwork_fromChanging(string value);
    partial void OnDwork_fromChanged();
    partial void OnDwork_toChanging(string value);
    partial void OnDwork_toChanged();
    partial void OnDdate_of_start_workChanging(System.DateTime value);
    partial void OnDdate_of_start_workChanged();
    partial void OnlogIdChanging(int value);
    partial void OnlogIdChanged();
    partial void OndaysOfWorkChanging(string value);
    partial void OndaysOfWorkChanged();
    #endregion
		
		public doctor()
		{
			this._login = default(EntityRef<login>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Did", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Did
		{
			get
			{
				return this._Did;
			}
			set
			{
				if ((this._Did != value))
				{
					this.OnDidChanging(value);
					this.SendPropertyChanging();
					this._Did = value;
					this.SendPropertyChanged("Did");
					this.OnDidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dname", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Dname
		{
			get
			{
				return this._Dname;
			}
			set
			{
				if ((this._Dname != value))
				{
					this.OnDnameChanging(value);
					this.SendPropertyChanging();
					this._Dname = value;
					this.SendPropertyChanged("Dname");
					this.OnDnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dphone_number", DbType="NVarChar(20)")]
		public string Dphone_number
		{
			get
			{
				return this._Dphone_number;
			}
			set
			{
				if ((this._Dphone_number != value))
				{
					this.OnDphone_numberChanging(value);
					this.SendPropertyChanging();
					this._Dphone_number = value;
					this.SendPropertyChanged("Dphone_number");
					this.OnDphone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dspecialization", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Dspecialization
		{
			get
			{
				return this._Dspecialization;
			}
			set
			{
				if ((this._Dspecialization != value))
				{
					this.OnDspecializationChanging(value);
					this.SendPropertyChanging();
					this._Dspecialization = value;
					this.SendPropertyChanged("Dspecialization");
					this.OnDspecializationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dnew_book_cost", DbType="Decimal(18,4) NOT NULL")]
		public decimal Dnew_book_cost
		{
			get
			{
				return this._Dnew_book_cost;
			}
			set
			{
				if ((this._Dnew_book_cost != value))
				{
					this.OnDnew_book_costChanging(value);
					this.SendPropertyChanging();
					this._Dnew_book_cost = value;
					this.SendPropertyChanged("Dnew_book_cost");
					this.OnDnew_book_costChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dquick_book_cost", DbType="Decimal(18,4) NOT NULL")]
		public decimal Dquick_book_cost
		{
			get
			{
				return this._Dquick_book_cost;
			}
			set
			{
				if ((this._Dquick_book_cost != value))
				{
					this.OnDquick_book_costChanging(value);
					this.SendPropertyChanging();
					this._Dquick_book_cost = value;
					this.SendPropertyChanged("Dquick_book_cost");
					this.OnDquick_book_costChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Drebook_cost", DbType="Decimal(18,4) NOT NULL")]
		public decimal Drebook_cost
		{
			get
			{
				return this._Drebook_cost;
			}
			set
			{
				if ((this._Drebook_cost != value))
				{
					this.OnDrebook_costChanging(value);
					this.SendPropertyChanging();
					this._Drebook_cost = value;
					this.SendPropertyChanged("Drebook_cost");
					this.OnDrebook_costChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dwork_from", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Dwork_from
		{
			get
			{
				return this._Dwork_from;
			}
			set
			{
				if ((this._Dwork_from != value))
				{
					this.OnDwork_fromChanging(value);
					this.SendPropertyChanging();
					this._Dwork_from = value;
					this.SendPropertyChanged("Dwork_from");
					this.OnDwork_fromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dwork_to", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Dwork_to
		{
			get
			{
				return this._Dwork_to;
			}
			set
			{
				if ((this._Dwork_to != value))
				{
					this.OnDwork_toChanging(value);
					this.SendPropertyChanging();
					this._Dwork_to = value;
					this.SendPropertyChanged("Dwork_to");
					this.OnDwork_toChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ddate_of_start_work", DbType="DateTime NOT NULL")]
		public System.DateTime Ddate_of_start_work
		{
			get
			{
				return this._Ddate_of_start_work;
			}
			set
			{
				if ((this._Ddate_of_start_work != value))
				{
					this.OnDdate_of_start_workChanging(value);
					this.SendPropertyChanging();
					this._Ddate_of_start_work = value;
					this.SendPropertyChanged("Ddate_of_start_work");
					this.OnDdate_of_start_workChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logId", DbType="Int NOT NULL")]
		public int logId
		{
			get
			{
				return this._logId;
			}
			set
			{
				if ((this._logId != value))
				{
					if (this._login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlogIdChanging(value);
					this.SendPropertyChanging();
					this._logId = value;
					this.SendPropertyChanged("logId");
					this.OnlogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_daysOfWork", DbType="NVarChar(50)")]
		public string daysOfWork
		{
			get
			{
				return this._daysOfWork;
			}
			set
			{
				if ((this._daysOfWork != value))
				{
					this.OndaysOfWorkChanging(value);
					this.SendPropertyChanging();
					this._daysOfWork = value;
					this.SendPropertyChanged("daysOfWork");
					this.OndaysOfWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="login_doctor", Storage="_login", ThisKey="logId", OtherKey="logId", IsForeignKey=true)]
		public login login
		{
			get
			{
				return this._login.Entity;
			}
			set
			{
				login previousValue = this._login.Entity;
				if (((previousValue != value) 
							|| (this._login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._login.Entity = null;
						previousValue.doctors.Remove(this);
					}
					this._login.Entity = value;
					if ((value != null))
					{
						value.doctors.Add(this);
						this._logId = value.logId;
					}
					else
					{
						this._logId = default(int);
					}
					this.SendPropertyChanged("login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.login")]
	public partial class login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _logId;
		
		private string _userName;
		
		private string _password;
		
		private string _type;
		
		private EntitySet<doctor> _doctors;
		
		private EntitySet<secretary> _secretaries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlogIdChanging(int value);
    partial void OnlogIdChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public login()
		{
			this._doctors = new EntitySet<doctor>(new Action<doctor>(this.attach_doctors), new Action<doctor>(this.detach_doctors));
			this._secretaries = new EntitySet<secretary>(new Action<secretary>(this.attach_secretaries), new Action<secretary>(this.detach_secretaries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int logId
		{
			get
			{
				return this._logId;
			}
			set
			{
				if ((this._logId != value))
				{
					this.OnlogIdChanging(value);
					this.SendPropertyChanging();
					this._logId = value;
					this.SendPropertyChanged("logId");
					this.OnlogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="NVarChar(100)")]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="login_doctor", Storage="_doctors", ThisKey="logId", OtherKey="logId")]
		public EntitySet<doctor> doctors
		{
			get
			{
				return this._doctors;
			}
			set
			{
				this._doctors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="login_secretary", Storage="_secretaries", ThisKey="logId", OtherKey="logId")]
		public EntitySet<secretary> secretaries
		{
			get
			{
				return this._secretaries;
			}
			set
			{
				this._secretaries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_doctors(doctor entity)
		{
			this.SendPropertyChanging();
			entity.login = this;
		}
		
		private void detach_doctors(doctor entity)
		{
			this.SendPropertyChanging();
			entity.login = null;
		}
		
		private void attach_secretaries(secretary entity)
		{
			this.SendPropertyChanging();
			entity.login = this;
		}
		
		private void detach_secretaries(secretary entity)
		{
			this.SendPropertyChanging();
			entity.login = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.organization")]
	public partial class organization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Oid;
		
		private string _org_name;
		
		private string _tybe;
		
		private System.Nullable<int> _OOid;
		
		private string _address;
		
		private string _phoneNUMBER;
		
		private EntityRef<rays_lab> _rays_lab;
		
		private EntityRef<rays_lab> _rays_lab1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(int value);
    partial void OnOidChanged();
    partial void Onorg_nameChanging(string value);
    partial void Onorg_nameChanged();
    partial void OntybeChanging(string value);
    partial void OntybeChanged();
    partial void OnOOidChanging(System.Nullable<int> value);
    partial void OnOOidChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnphoneNUMBERChanging(string value);
    partial void OnphoneNUMBERChanged();
    #endregion
		
		public organization()
		{
			this._rays_lab = default(EntityRef<rays_lab>);
			this._rays_lab1 = default(EntityRef<rays_lab>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_org_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string org_name
		{
			get
			{
				return this._org_name;
			}
			set
			{
				if ((this._org_name != value))
				{
					this.Onorg_nameChanging(value);
					this.SendPropertyChanging();
					this._org_name = value;
					this.SendPropertyChanged("org_name");
					this.Onorg_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tybe", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string tybe
		{
			get
			{
				return this._tybe;
			}
			set
			{
				if ((this._tybe != value))
				{
					this.OntybeChanging(value);
					this.SendPropertyChanging();
					this._tybe = value;
					this.SendPropertyChanged("tybe");
					this.OntybeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OOid", DbType="Int")]
		public System.Nullable<int> OOid
		{
			get
			{
				return this._OOid;
			}
			set
			{
				if ((this._OOid != value))
				{
					if ((this._rays_lab.HasLoadedOrAssignedValue || this._rays_lab1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOOidChanging(value);
					this.SendPropertyChanging();
					this._OOid = value;
					this.SendPropertyChanged("OOid");
					this.OnOOidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(500)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNUMBER", DbType="NVarChar(50)")]
		public string phoneNUMBER
		{
			get
			{
				return this._phoneNUMBER;
			}
			set
			{
				if ((this._phoneNUMBER != value))
				{
					this.OnphoneNUMBERChanging(value);
					this.SendPropertyChanging();
					this._phoneNUMBER = value;
					this.SendPropertyChanged("phoneNUMBER");
					this.OnphoneNUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rays_lab_organization", Storage="_rays_lab", ThisKey="OOid", OtherKey="OOid", IsForeignKey=true)]
		public rays_lab rays_lab
		{
			get
			{
				return this._rays_lab.Entity;
			}
			set
			{
				rays_lab previousValue = this._rays_lab.Entity;
				if (((previousValue != value) 
							|| (this._rays_lab.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._rays_lab.Entity = null;
						previousValue.organizations.Remove(this);
					}
					this._rays_lab.Entity = value;
					if ((value != null))
					{
						value.organizations.Add(this);
						this._OOid = value.OOid;
					}
					else
					{
						this._OOid = default(Nullable<int>);
					}
					this.SendPropertyChanged("rays_lab");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rays_lab_organization1", Storage="_rays_lab1", ThisKey="OOid", OtherKey="OOid", IsForeignKey=true)]
		public rays_lab rays_lab1
		{
			get
			{
				return this._rays_lab1.Entity;
			}
			set
			{
				rays_lab previousValue = this._rays_lab1.Entity;
				if (((previousValue != value) 
							|| (this._rays_lab1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._rays_lab1.Entity = null;
						previousValue.organizations1.Remove(this);
					}
					this._rays_lab1.Entity = value;
					if ((value != null))
					{
						value.organizations1.Add(this);
						this._OOid = value.OOid;
					}
					else
					{
						this._OOid = default(Nullable<int>);
					}
					this.SendPropertyChanged("rays_lab1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.patient")]
	public partial class patient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Pid;
		
		private string _name;
		
		private string _phone_number;
		
		private System.Nullable<bool> _da8t;
		
		private System.Nullable<bool> _suger;
		
		private System.Nullable<bool> _virus;
		
		private System.Nullable<bool> _surgery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPidChanging(int value);
    partial void OnPidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onphone_numberChanging(string value);
    partial void Onphone_numberChanged();
    partial void Onda8tChanging(System.Nullable<bool> value);
    partial void Onda8tChanged();
    partial void OnsugerChanging(System.Nullable<bool> value);
    partial void OnsugerChanged();
    partial void OnvirusChanging(System.Nullable<bool> value);
    partial void OnvirusChanged();
    partial void OnsurgeryChanging(System.Nullable<bool> value);
    partial void OnsurgeryChanged();
    #endregion
		
		public patient()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Pid
		{
			get
			{
				return this._Pid;
			}
			set
			{
				if ((this._Pid != value))
				{
					this.OnPidChanging(value);
					this.SendPropertyChanging();
					this._Pid = value;
					this.SendPropertyChanged("Pid");
					this.OnPidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_number", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string phone_number
		{
			get
			{
				return this._phone_number;
			}
			set
			{
				if ((this._phone_number != value))
				{
					this.Onphone_numberChanging(value);
					this.SendPropertyChanging();
					this._phone_number = value;
					this.SendPropertyChanged("phone_number");
					this.Onphone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_da8t", DbType="Bit")]
		public System.Nullable<bool> da8t
		{
			get
			{
				return this._da8t;
			}
			set
			{
				if ((this._da8t != value))
				{
					this.Onda8tChanging(value);
					this.SendPropertyChanging();
					this._da8t = value;
					this.SendPropertyChanged("da8t");
					this.Onda8tChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_suger", DbType="Bit")]
		public System.Nullable<bool> suger
		{
			get
			{
				return this._suger;
			}
			set
			{
				if ((this._suger != value))
				{
					this.OnsugerChanging(value);
					this.SendPropertyChanging();
					this._suger = value;
					this.SendPropertyChanged("suger");
					this.OnsugerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_virus", DbType="Bit")]
		public System.Nullable<bool> virus
		{
			get
			{
				return this._virus;
			}
			set
			{
				if ((this._virus != value))
				{
					this.OnvirusChanging(value);
					this.SendPropertyChanging();
					this._virus = value;
					this.SendPropertyChanged("virus");
					this.OnvirusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_surgery", DbType="Bit")]
		public System.Nullable<bool> surgery
		{
			get
			{
				return this._surgery;
			}
			set
			{
				if ((this._surgery != value))
				{
					this.OnsurgeryChanging(value);
					this.SendPropertyChanging();
					this._surgery = value;
					this.SendPropertyChanged("surgery");
					this.OnsurgeryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rays_labs")]
	public partial class rays_lab : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OOid;
		
		private string _org_lx_name;
		
		private string _type;
		
		private EntitySet<organization> _organizations;
		
		private EntitySet<organization> _organizations1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOOidChanging(int value);
    partial void OnOOidChanged();
    partial void Onorg_lx_nameChanging(string value);
    partial void Onorg_lx_nameChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public rays_lab()
		{
			this._organizations = new EntitySet<organization>(new Action<organization>(this.attach_organizations), new Action<organization>(this.detach_organizations));
			this._organizations1 = new EntitySet<organization>(new Action<organization>(this.attach_organizations1), new Action<organization>(this.detach_organizations1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OOid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OOid
		{
			get
			{
				return this._OOid;
			}
			set
			{
				if ((this._OOid != value))
				{
					this.OnOOidChanging(value);
					this.SendPropertyChanging();
					this._OOid = value;
					this.SendPropertyChanged("OOid");
					this.OnOOidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_org_lx_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string org_lx_name
		{
			get
			{
				return this._org_lx_name;
			}
			set
			{
				if ((this._org_lx_name != value))
				{
					this.Onorg_lx_nameChanging(value);
					this.SendPropertyChanging();
					this._org_lx_name = value;
					this.SendPropertyChanged("org_lx_name");
					this.Onorg_lx_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NChar(10)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rays_lab_organization", Storage="_organizations", ThisKey="OOid", OtherKey="OOid")]
		public EntitySet<organization> organizations
		{
			get
			{
				return this._organizations;
			}
			set
			{
				this._organizations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rays_lab_organization1", Storage="_organizations1", ThisKey="OOid", OtherKey="OOid")]
		public EntitySet<organization> organizations1
		{
			get
			{
				return this._organizations1;
			}
			set
			{
				this._organizations1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_organizations(organization entity)
		{
			this.SendPropertyChanging();
			entity.rays_lab = this;
		}
		
		private void detach_organizations(organization entity)
		{
			this.SendPropertyChanging();
			entity.rays_lab = null;
		}
		
		private void attach_organizations1(organization entity)
		{
			this.SendPropertyChanging();
			entity.rays_lab1 = this;
		}
		
		private void detach_organizations1(organization entity)
		{
			this.SendPropertyChanging();
			entity.rays_lab1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.secretary")]
	public partial class secretary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Sid;
		
		private string _Sname;
		
		private string _Sphone_number;
		
		private string _Swork_from;
		
		private string _Swork_to;
		
		private System.DateTime _Sdate_of_start_work;
		
		private int _logId;
		
		private string _daysOfWork;
		
		private EntityRef<login> _login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSidChanging(int value);
    partial void OnSidChanged();
    partial void OnSnameChanging(string value);
    partial void OnSnameChanged();
    partial void OnSphone_numberChanging(string value);
    partial void OnSphone_numberChanged();
    partial void OnSwork_fromChanging(string value);
    partial void OnSwork_fromChanged();
    partial void OnSwork_toChanging(string value);
    partial void OnSwork_toChanged();
    partial void OnSdate_of_start_workChanging(System.DateTime value);
    partial void OnSdate_of_start_workChanged();
    partial void OnlogIdChanging(int value);
    partial void OnlogIdChanged();
    partial void OndaysOfWorkChanging(string value);
    partial void OndaysOfWorkChanged();
    #endregion
		
		public secretary()
		{
			this._login = default(EntityRef<login>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Sid
		{
			get
			{
				return this._Sid;
			}
			set
			{
				if ((this._Sid != value))
				{
					this.OnSidChanging(value);
					this.SendPropertyChanging();
					this._Sid = value;
					this.SendPropertyChanged("Sid");
					this.OnSidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sname", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Sname
		{
			get
			{
				return this._Sname;
			}
			set
			{
				if ((this._Sname != value))
				{
					this.OnSnameChanging(value);
					this.SendPropertyChanging();
					this._Sname = value;
					this.SendPropertyChanged("Sname");
					this.OnSnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sphone_number", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Sphone_number
		{
			get
			{
				return this._Sphone_number;
			}
			set
			{
				if ((this._Sphone_number != value))
				{
					this.OnSphone_numberChanging(value);
					this.SendPropertyChanging();
					this._Sphone_number = value;
					this.SendPropertyChanged("Sphone_number");
					this.OnSphone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Swork_from", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Swork_from
		{
			get
			{
				return this._Swork_from;
			}
			set
			{
				if ((this._Swork_from != value))
				{
					this.OnSwork_fromChanging(value);
					this.SendPropertyChanging();
					this._Swork_from = value;
					this.SendPropertyChanged("Swork_from");
					this.OnSwork_fromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Swork_to", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Swork_to
		{
			get
			{
				return this._Swork_to;
			}
			set
			{
				if ((this._Swork_to != value))
				{
					this.OnSwork_toChanging(value);
					this.SendPropertyChanging();
					this._Swork_to = value;
					this.SendPropertyChanged("Swork_to");
					this.OnSwork_toChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sdate_of_start_work", DbType="DateTime NOT NULL")]
		public System.DateTime Sdate_of_start_work
		{
			get
			{
				return this._Sdate_of_start_work;
			}
			set
			{
				if ((this._Sdate_of_start_work != value))
				{
					this.OnSdate_of_start_workChanging(value);
					this.SendPropertyChanging();
					this._Sdate_of_start_work = value;
					this.SendPropertyChanged("Sdate_of_start_work");
					this.OnSdate_of_start_workChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logId", DbType="Int NOT NULL")]
		public int logId
		{
			get
			{
				return this._logId;
			}
			set
			{
				if ((this._logId != value))
				{
					if (this._login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlogIdChanging(value);
					this.SendPropertyChanging();
					this._logId = value;
					this.SendPropertyChanged("logId");
					this.OnlogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_daysOfWork", DbType="NVarChar(50)")]
		public string daysOfWork
		{
			get
			{
				return this._daysOfWork;
			}
			set
			{
				if ((this._daysOfWork != value))
				{
					this.OndaysOfWorkChanging(value);
					this.SendPropertyChanging();
					this._daysOfWork = value;
					this.SendPropertyChanged("daysOfWork");
					this.OndaysOfWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="login_secretary", Storage="_login", ThisKey="logId", OtherKey="logId", IsForeignKey=true)]
		public login login
		{
			get
			{
				return this._login.Entity;
			}
			set
			{
				login previousValue = this._login.Entity;
				if (((previousValue != value) 
							|| (this._login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._login.Entity = null;
						previousValue.secretaries.Remove(this);
					}
					this._login.Entity = value;
					if ((value != null))
					{
						value.secretaries.Add(this);
						this._logId = value.logId;
					}
					else
					{
						this._logId = default(int);
					}
					this.SendPropertyChanged("login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.treatment")]
	public partial class treatment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TTid;
		
		private string _treatment_name;
		
		private EntitySet<check_up_treatment> _check_up_treatments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTTidChanging(int value);
    partial void OnTTidChanged();
    partial void Ontreatment_nameChanging(string value);
    partial void Ontreatment_nameChanged();
    #endregion
		
		public treatment()
		{
			this._check_up_treatments = new EntitySet<check_up_treatment>(new Action<check_up_treatment>(this.attach_check_up_treatments), new Action<check_up_treatment>(this.detach_check_up_treatments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TTid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TTid
		{
			get
			{
				return this._TTid;
			}
			set
			{
				if ((this._TTid != value))
				{
					this.OnTTidChanging(value);
					this.SendPropertyChanging();
					this._TTid = value;
					this.SendPropertyChanged("TTid");
					this.OnTTidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_treatment_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string treatment_name
		{
			get
			{
				return this._treatment_name;
			}
			set
			{
				if ((this._treatment_name != value))
				{
					this.Ontreatment_nameChanging(value);
					this.SendPropertyChanging();
					this._treatment_name = value;
					this.SendPropertyChanged("treatment_name");
					this.Ontreatment_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="treatment_check_up_treatment", Storage="_check_up_treatments", ThisKey="TTid", OtherKey="TTid")]
		public EntitySet<check_up_treatment> check_up_treatments
		{
			get
			{
				return this._check_up_treatments;
			}
			set
			{
				this._check_up_treatments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_check_up_treatments(check_up_treatment entity)
		{
			this.SendPropertyChanging();
			entity.treatment = this;
		}
		
		private void detach_check_up_treatments(check_up_treatment entity)
		{
			this.SendPropertyChanging();
			entity.treatment = null;
		}
	}
}
#pragma warning restore 1591
